<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

 <title>James Jackson</title>
 <link href="http://blog.openroar.com/atom.xml" rel="self"/>
 <link href="http://blog.openroar.com/"/>
 <updated>2016-09-09T23:36:54-05:00</updated>
 <id>http://blog.openroar.com</id>
 <author>
   <name>James Jackson</name>
   <email>fiberhog@gmail.com</email>
 </author>

 
 <entry>
   <title>Drone LTE (Part IV)</title>
   <link href="http://blog.openroar.com/2016/09/07/drone-lte-part4/"/>
   <updated>2016-09-07T00:00:00-05:00</updated>
   <id>http://blog.openroar.com/2016/09/07/drone-lte-part4</id>
   <content type="html">&lt;p&gt;This part provides a demonstration of the LTE-connected drone.&lt;/p&gt;

&lt;h3 id=&quot;final-setup&quot;&gt;Final Setup&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;/images/ltedrone.jpg&quot; alt=&quot;3DR Solo with LTE telemetry&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;live-demo&quot;&gt;Live Demo&lt;/h3&gt;

&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/7ARJ3PadnUo&quot; frameborder=&quot;0&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;

&lt;h3 id=&quot;open-issues&quot;&gt;Open Issues&lt;/h3&gt;

&lt;p&gt;The Cloud Control Station (CCS) periodically loses link (MAVLink messaging level). Note that the MAVLink messages are using UDP. TCP would not help here, as the head-of-line blocking issues would create new problems. This area requires additional investigation into the protocol behavior, and the MAVProxy implementation.&lt;/p&gt;

&lt;h3 id=&quot;next-steps&quot;&gt;Next Steps&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Investigate link drop issues&lt;/li&gt;
  &lt;li&gt;Characterize LTE communication during flight&lt;/li&gt;
  &lt;li&gt;Stream video over LTE&lt;/li&gt;
  &lt;li&gt;Investigate ICE/STUN/TURN options for MAVLink messaging via NATs&lt;/li&gt;
&lt;/ul&gt;
</content>
 </entry>
 
 <entry>
   <title>Drone LTE (Part III)</title>
   <link href="http://blog.openroar.com/2016/09/03/drone-lte-part3/"/>
   <updated>2016-09-03T00:00:00-05:00</updated>
   <id>http://blog.openroar.com/2016/09/03/drone-lte-part3</id>
   <content type="html">&lt;p&gt;This part establishes the communication between the secondary companion computer and the drone (the final piece of the puzzle), and tests end-to-end telemetry between Solo and the Cloud Control Station (CCS).&lt;/p&gt;

&lt;h3 id=&quot;dronecompanion-computer-usb-connection&quot;&gt;Drone/Companion Computer USB Connection&lt;/h3&gt;

&lt;p&gt;A &lt;a href=&quot;http://viresity.com/product/3dr-solo-accessory-breakout-board/&quot;&gt;breakout board&lt;/a&gt; provides a micro USB OTG interface to Solo via the &lt;a href=&quot;https://dev.3dr.com/hardware-accessorybay.html&quot;&gt;accessory port&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Connecting the Odroid C0 to Solo via a USB OTG cable creates a serial device (/dev/ttyACM0) on the Odroid C0, and a serial device (/dev/ttyGS0) on the Solo. By default, Solo supports login via the /dev/ttyGS0 device.&lt;/p&gt;

&lt;p&gt;SSH into Solo as described &lt;a href=&quot;https://dev.3dr.com/starting-network.html&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Disable login via /dev/ttyGS0 on Solo by commenting out this line in /etc/inittab:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;2:2345:respawn:/sbin/getty 115200 ttyGS0 vt100&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;and re-reading inittab:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;init q&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Connect Solo to the Internet as described &lt;a href=&quot;https://dev.3dr.com/starting-utils.html&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Install MAVProxy on Solo:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;smart install mavproxy&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h3 id=&quot;end-to-end-testing&quot;&gt;End-to-end Testing&lt;/h3&gt;

&lt;p&gt;Start the CCS on the droplet:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;mavproxy.py —master&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;udp:&amp;lt;Droplet IP&amp;gt;:14550&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Connect Odroid C0 via LTE as described in Part I.&lt;/p&gt;

&lt;p&gt;Setup Odroid C0 to forward the telemetry from Solo (/dev/ttyACM0) to the CCS:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;sudo mavproxy.py --master /dev/ttyACM0 --out &amp;lt;Droplet IP&amp;gt;:14550&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Setup Solo to forward the telemetry to Odroid C0 (/dev/ttyGS0):&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;mavproxy.py --master&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;127.0.0.1:14550 --out /dev/ttyGS0&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;The CCS should now have control of Solo via LTE !&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Drone LTE (Part II)</title>
   <link href="http://blog.openroar.com/2016/08/27/drone-lte-part2/"/>
   <updated>2016-08-27T00:00:00-05:00</updated>
   <id>http://blog.openroar.com/2016/08/27/drone-lte-part2</id>
   <content type="html">&lt;p&gt;This part introduces a Cloud Control Station (CCS), sets up telemetry forwarding from the secondary companion computer, and tests via a simulated vehicle.&lt;/p&gt;

&lt;h3 id=&quot;cloud-control-station&quot;&gt;Cloud Control Station&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;http://qgroundcontrol.org/mavlink/mavproxy_startpage&quot;&gt;MAVProxy&lt;/a&gt; running on an Ubuntu 16.04 droplet on &lt;a href=&quot;https://www.digitalocean.com/&quot;&gt;Digital Ocean&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The CCS will be the final endpoint for the &lt;a href=&quot;http://qgroundcontrol.org/mavlink/start&quot;&gt;MAVLink&lt;/a&gt; telemetry messaging. Ideally, ICE/STUN/TURN (Voice-over-IP folks will recognize these !) would allow a Ground Control Station (GCS) on a laptop (also behind a NAT) to communicate with the LTE-connected drone.&lt;/p&gt;

&lt;p&gt;Install MAVProxy on the droplet (note that only Python3 is installed by default):&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;sudo apt-get update
sudo apt-get install python2.7 python-dev python-opencv python-wxgtk3.0 python-pip python-matplotlib python-pygame python-lxml
sudo -H pip install MAVProxy&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h3 id=&quot;telemetry-forwarding-secondary-companion-computer&quot;&gt;Telemetry Forwarding (Secondary Companion Computer)&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;http://qgroundcontrol.org/mavlink/mavproxy_startpage&quot;&gt;MAVProxy&lt;/a&gt; also supports forwarding of &lt;a href=&quot;http://qgroundcontrol.org/mavlink/start&quot;&gt;MAVLink&lt;/a&gt; telemetry.&lt;/p&gt;

&lt;p&gt;Install MAVProxy on Odroid C0:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;sudo apt-get update
sudo apt-get install python-dev python-opencv python-wxgtk3.0 python-pip python-matplotlib python-pygame python-lxml
sudo -H pip install MAVProxy&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h3 id=&quot;testing-via-simulation&quot;&gt;Testing via Simulation&lt;/h3&gt;

&lt;p&gt;Install &lt;a href=&quot;http://python.dronekit.io/&quot;&gt;DroneKit-Python&lt;/a&gt; and &lt;a href=&quot;http://python.dronekit.io/develop/sitl_setup.html&quot;&gt;DroneKit-SITL&lt;/a&gt; on Odroid C0:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;sudo -H pip install dronekit
sudo -H pip install dronekit-sitl&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;The copter simulation would normally start but…&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;gp&quot;&gt;odroid@odroid:~$ &lt;/span&gt;dronekit-sitl copter
os: linux, apm: copter, release: stable
SITL already Downloaded and Extracted.
Ready to boot.
Execute: /home/odroid/.dronekit/sitl/copter-3.3/apm --home&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;-35.363261,149.165230,584,353 --model&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;quad
Traceback &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;most recent call last&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;:
  File &lt;span class=&quot;s2&quot;&gt;&quot;/usr/local/bin/dronekit-sitl&quot;&lt;/span&gt;, line 11, &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &amp;lt;module&amp;gt;
    sys.exit&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;main&lt;span class=&quot;o&quot;&gt;())&lt;/span&gt;
  File &lt;span class=&quot;s2&quot;&gt;&quot;/usr/local/lib/python2.7/dist-packages/dronekit_sitl/__init__.py&quot;&lt;/span&gt;, line 475, &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;main
    sitl.launch&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;args, &lt;span class=&quot;nv&quot;&gt;verbose&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;True&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
  File &lt;span class=&quot;s2&quot;&gt;&quot;/usr/local/lib/python2.7/dist-packages/dronekit_sitl/__init__.py&quot;&lt;/span&gt;, line 266, &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;launch
    p &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; Popen&lt;span class=&quot;o&quot;&gt;([&lt;/span&gt;self.path] + args, &lt;span class=&quot;nv&quot;&gt;cwd&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;wd, &lt;span class=&quot;nv&quot;&gt;shell&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;sys.platform &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'win32'&lt;/span&gt;, &lt;span class=&quot;nv&quot;&gt;stdout&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;PIPE, &lt;span class=&quot;nv&quot;&gt;stderr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;PIPE&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
  File &lt;span class=&quot;s2&quot;&gt;&quot;/usr/lib/python2.7/subprocess.py&quot;&lt;/span&gt;, line 711, &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;__init__
    errread, errwrite&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
  File &lt;span class=&quot;s2&quot;&gt;&quot;/usr/lib/python2.7/subprocess.py&quot;&lt;/span&gt;, line 1343, &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;_execute_child
    raise child_exception
OSError: &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;Errno 8] Exec format error&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;The included models are not built for the ARM architecture on the Odroid C0 !&lt;/p&gt;

&lt;p&gt;Re-build the models:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;sudo apt-get install git
git clone git://github.com/ArduPilot/ardupilot.git
&lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;ardupilot/ArduCopter
git submodule init
git submodule update .
make sitl&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Start a copter simulation on the Odroid C0 (binds to port 5760):&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;dronekit-sitl ~/ardupilot/ArduCopter/ArduCopter.elf&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Connect Odroid C0 via LTE as described in Part I.&lt;/p&gt;

&lt;p&gt;Forward the telemetry to the CCS from the Odroid C0:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;mavproxy.py --master tcp:127.0.0.1:5760 --out &amp;lt;Droplet IP&amp;gt;:14550&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Start the CCS on the droplet:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;mavproxy.py —master&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;udp:&amp;lt;Droplet IP&amp;gt;:14550&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;The CCS should now have control of the simulated copter via LTE !&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>Drone LTE (Part I)</title>
   <link href="http://blog.openroar.com/2016/08/18/drone-lte-part1/"/>
   <updated>2016-08-18T00:00:00-05:00</updated>
   <id>http://blog.openroar.com/2016/08/18/drone-lte-part1</id>
   <content type="html">&lt;p&gt;This part introduces the drone and a secondary companion computer, and sets up an LTE dongle on the companion computer .&lt;/p&gt;

&lt;h3 id=&quot;drone&quot;&gt;Drone&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;https://3dr.com/solo-drone/specs/&quot;&gt;3DR Solo&lt;/a&gt; w/Gimbal and GoPro HERO4 camera&lt;/p&gt;

&lt;p&gt;The &lt;a href=&quot;https://dev.3dr.com/concept-architecture.html&quot;&gt;Solo architecture&lt;/a&gt; shows the primary companion computer (iMX.6) that runs Yocto Linux. The &lt;a href=&quot;https://dev.3dr.com/hardware-accessorybay.html&quot;&gt;accessory port&lt;/a&gt; provides USB access to the iMX.6 via a breakout board, but the kernel only includes support for USB serial devices (FTDI and CDC-ACM). Adding a secondary companion computer provides some additional flexibility, and reduces the chances of bricking the primary.&lt;/p&gt;

&lt;h3 id=&quot;secondary-companion-computer&quot;&gt;Secondary Companion Computer&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;http://www.hardkernel.com/main/products/prdt_info.php?g_code=G145326484280&quot;&gt;Odroid C0&lt;/a&gt; with battery&lt;/p&gt;

&lt;p&gt;One really nice aspect of the C0 is the integrated battery power circuit. The Solo accessory port can provide 5V power, but it’s limited to 1.05A.&lt;/p&gt;

&lt;p&gt;Load the Ubuntu 16.04 image onto the micro SD card from a Macbook Pro:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;gunzip -d ~/Downloads/ubuntu-16.04-mate-odroid-c1-20160727.img.xz
diskutil unmountDisk /dev/disk2
sudo dd &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;~/Downloads/ubuntu-16.04-mate-odroid-c1-20160727.img &lt;span class=&quot;nv&quot;&gt;of&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;/dev/rdisk2 &lt;span class=&quot;nv&quot;&gt;bs&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;1m&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h3 id=&quot;lte-dongle&quot;&gt;LTE dongle&lt;/h3&gt;

&lt;p&gt;Aircard 340u (AT&amp;amp;T Beam)&lt;/p&gt;

&lt;p&gt;Some good background on &lt;a href=&quot;https://aleksander.es/data/FOSDEM%202014%20-%20LTE%20in%20your%20Linux%20based%20system.pdf&quot;&gt;LTE in Linux&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The Aircard 340u is not correctly recognized in Linux until a &lt;a href=&quot;http://www.downloads.netgear.com/files/aircard/AC340U_linux_patch_v4.zip&quot;&gt;firmware patch&lt;/a&gt; is applied. The patch disables the Windows 8 MBIM Identity Morphing.&lt;/p&gt;

&lt;p&gt;Note that the dongle is not always recognized on boot. However, it does show up after pulling/re-inserting. Modem Manager should show something like this:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;gp&quot;&gt;odroid@odroid:~$ &lt;/span&gt;mmcli -L

Found 1 modems:
	/org/freedesktop/ModemManager1/Modem/0 &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;Sierra Wireless, Incorporated] AirCard 340U
	
&lt;span class=&quot;gp&quot;&gt;odroid@odroid:~$ &lt;/span&gt;mmcli -m 0

/org/freedesktop/ModemManager1/Modem/0 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;device id &lt;span class=&quot;s1&quot;&gt;'f9ec6c6d9e9a9e248e7fd69e9b51e480bb493cd0'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
  -------------------------
  Hardware |   manufacturer: &lt;span class=&quot;s1&quot;&gt;'Sierra Wireless, Incorporated'&lt;/span&gt;
           |          model: &lt;span class=&quot;s1&quot;&gt;'AirCard 340U'&lt;/span&gt;
           |       revision: &lt;span class=&quot;s1&quot;&gt;'NTG9X15C_01.13.12.14 r18981 ntgrbc-fwbuild1 2014/07/11 13:48:17'&lt;/span&gt;
           |      supported: &lt;span class=&quot;s1&quot;&gt;'gsm-umts
           |                  lte
           |                  gsm-umts, lte'&lt;/span&gt;
           |        current: &lt;span class=&quot;s1&quot;&gt;'gsm-umts, lte'&lt;/span&gt;
           |   equipment id: &lt;span class=&quot;s1&quot;&gt;'013323000538430'&lt;/span&gt;
  -------------------------
  System   |         device: &lt;span class=&quot;s1&quot;&gt;'/sys/devices/lm0/usb2/2-1'&lt;/span&gt;
           |        drivers: &lt;span class=&quot;s1&quot;&gt;'qmi_wwan, qcserial'&lt;/span&gt;
           |         plugin: &lt;span class=&quot;s1&quot;&gt;'Sierra'&lt;/span&gt;
           |   primary port: &lt;span class=&quot;s1&quot;&gt;'cdc-wdm0'&lt;/span&gt;
           |          ports: &lt;span class=&quot;s1&quot;&gt;'cdc-wdm0 (qmi), wwan0 (net)'&lt;/span&gt;
  -------------------------
  Numbers  |           own : &lt;span class=&quot;s1&quot;&gt;'1512*******'&lt;/span&gt;
  -------------------------
  Status   |           lock: &lt;span class=&quot;s1&quot;&gt;'sim-pin2'&lt;/span&gt;
           | unlock retries: &lt;span class=&quot;s1&quot;&gt;'sim-pin (3), sim-pin2 (3), sim-puk (10), sim-puk2 (10)'&lt;/span&gt;
           |          state: &lt;span class=&quot;s1&quot;&gt;'registered'&lt;/span&gt;
           |    power state: &lt;span class=&quot;s1&quot;&gt;'on'&lt;/span&gt;
           |    access tech: &lt;span class=&quot;s1&quot;&gt;'lte'&lt;/span&gt;
           | signal quality: &lt;span class=&quot;s1&quot;&gt;'55'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;recent&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
  -------------------------
  Modes    |      supported: &lt;span class=&quot;s1&quot;&gt;'allowed: 2g, 3g, 4g; preferred: none'&lt;/span&gt;
           |        current: &lt;span class=&quot;s1&quot;&gt;'allowed: 2g, 3g, 4g; preferred: none'&lt;/span&gt;
  -------------------------
  Bands    |      supported: &lt;span class=&quot;s1&quot;&gt;'dcs, egsm, pcs, g850, u2100, u1900, u850, eutran-ii, eutran-iv, eutran-v, eutran-xvii'&lt;/span&gt;
           |        current: &lt;span class=&quot;s1&quot;&gt;'dcs, egsm, pcs, g850, u2100, u1900, u850, eutran-ii, eutran-iv, eutran-v, eutran-xvii'&lt;/span&gt;
  -------------------------
  IP       |      supported: &lt;span class=&quot;s1&quot;&gt;'ipv4, ipv6, ipv4v6'&lt;/span&gt;
  -------------------------
  3GPP     |           imei: &lt;span class=&quot;s1&quot;&gt;'***************'&lt;/span&gt;
           |  enabled locks: &lt;span class=&quot;s1&quot;&gt;'net-pers'&lt;/span&gt;
           |    operator id: &lt;span class=&quot;s1&quot;&gt;'310410'&lt;/span&gt;
           |  operator name: &lt;span class=&quot;s1&quot;&gt;'AT&amp;amp;T'&lt;/span&gt;
           |   subscription: &lt;span class=&quot;s1&quot;&gt;'unknown'&lt;/span&gt;
           |   registration: &lt;span class=&quot;s1&quot;&gt;'home'&lt;/span&gt;
  -------------------------
  SIM      |           path: &lt;span class=&quot;s1&quot;&gt;'/org/freedesktop/ModemManager1/SIM/0'&lt;/span&gt;

  -------------------------
  Bearers  |          paths: ‘none&lt;span class=&quot;s1&quot;&gt;'&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Install QMI utilities:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;gp&quot;&gt;odroid@odroid:~$ &lt;/span&gt;sudo apt-get install libqmi-utils&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Check signal strength:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;gp&quot;&gt;odroid@odroid:~$ &lt;/span&gt;sudo qmicli -d /dev/cdc-wdm0    --nas-get-signal-strength --device-open-proxy
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;/dev/cdc-wdm0] Successfully got signal strength
Current:
	Network &lt;span class=&quot;s1&quot;&gt;'lte'&lt;/span&gt;: &lt;span class=&quot;s1&quot;&gt;'-81 dBm'&lt;/span&gt;
Other:
	Network &lt;span class=&quot;s1&quot;&gt;'cdma-1xevdo'&lt;/span&gt;: &lt;span class=&quot;s1&quot;&gt;'-125 dBm'&lt;/span&gt;
RSSI:
	Network &lt;span class=&quot;s1&quot;&gt;'lte'&lt;/span&gt;: &lt;span class=&quot;s1&quot;&gt;'-81 dBm'&lt;/span&gt;
	Network &lt;span class=&quot;s1&quot;&gt;'cdma-1xevdo'&lt;/span&gt;: &lt;span class=&quot;s1&quot;&gt;'-125 dBm'&lt;/span&gt;
ECIO:
	Network &lt;span class=&quot;s1&quot;&gt;'lte'&lt;/span&gt;: &lt;span class=&quot;s1&quot;&gt;'-31.5 dBm'&lt;/span&gt;
	Network &lt;span class=&quot;s1&quot;&gt;'cdma-1xevdo'&lt;/span&gt;: &lt;span class=&quot;s1&quot;&gt;'-2.5 dBm'&lt;/span&gt;
IO: &lt;span class=&quot;s1&quot;&gt;'-106 dBm'&lt;/span&gt;
SINR: &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;8&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'9.0 dB'&lt;/span&gt;
RSRQ:
	Network &lt;span class=&quot;s1&quot;&gt;'lte'&lt;/span&gt;: &lt;span class=&quot;s1&quot;&gt;'-16 dB'&lt;/span&gt;
SNR:
	Network &lt;span class=&quot;s1&quot;&gt;'lte'&lt;/span&gt;: &lt;span class=&quot;s1&quot;&gt;'-3.6 dB'&lt;/span&gt;
RSRP:
	Network &lt;span class=&quot;s1&quot;&gt;'lte'&lt;/span&gt;: &lt;span class=&quot;s1&quot;&gt;'-115 dBm’&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Start the connection:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;gp&quot;&gt;odroid@odroid:~$ &lt;/span&gt;sudo qmicli -d /dev/cdc-wdm0 --wds-start-network&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;  --client-no-release-cid --device-open-proxy

&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;/dev/cdc-wdm0] Network started
	Packet data handle: &lt;span class=&quot;s1&quot;&gt;'1143419264'&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;/dev/cdc-wdm0] Client ID not released:
	Service: &lt;span class=&quot;s1&quot;&gt;'wds'&lt;/span&gt;
	    CID: &lt;span class=&quot;s1&quot;&gt;'1'&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Bring up the IP interface:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;gp&quot;&gt;odroid@odroid:~$ &lt;/span&gt;sudo dhclient wwan0

&lt;span class=&quot;gp&quot;&gt;odroid@odroid:~$ &lt;/span&gt;ifconfig wwan0
wwan0     Link encap:Ethernet  HWaddr 02:41:05:b1:61:86  
          inet addr:10.165.72.130  Bcast:10.165.72.131  Mask:255.255.255.252
          inet6 addr: fe80::41:5ff:feb1:6186/64 Scope:Link
          UP BROADCAST RUNNING MULTICAST  MTU:1430  Metric:1
          RX packets:3 errors:0 dropped:0 overruns:0 frame:0
          TX packets:49 errors:0 dropped:0 overruns:0 carrier:0
          collisions:0 txqueuelen:1000 
          RX bytes:906 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;906.0 B&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;  TX bytes:7368 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;7.3 KB&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Remove the default route associated with the WiFi interface:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;gp&quot;&gt;odroid@odroid:~$ &lt;/span&gt;netstat -nr
Kernel IP routing table
Destination     Gateway         Genmask         Flags   MSS Window  irtt Iface
0.0.0.0         10.165.72.129   0.0.0.0         UG        0 0          0 wwan0
0.0.0.0         192.168.1.254   0.0.0.0         UG        0 0          0 enx8cae4cf5675c
10.165.72.128   0.0.0.0         255.255.255.252 U         0 0          0 wwan0
169.254.0.0     0.0.0.0         255.255.0.0     U         0 0          0 enx8cae4cf5675c
192.168.1.0     0.0.0.0         255.255.255.0   U         0 0          0 enx8cae4cf5675c

&lt;span class=&quot;gp&quot;&gt;odroid@odroid:~$ &lt;/span&gt;sudo route del -net 0.0.0.0/0 gw 192.168.1.254&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;It’s alive !&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;gp&quot;&gt;odroid@odroid:~$ &lt;/span&gt;ping 8.8.8.8
PING 8.8.8.8 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;8.8.8.8&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; 56&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;84&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; bytes of data.
64 bytes from 8.8.8.8: &lt;span class=&quot;nv&quot;&gt;icmp_seq&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;1 &lt;span class=&quot;nv&quot;&gt;ttl&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;57 &lt;span class=&quot;nb&quot;&gt;time&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;127 ms
64 bytes from 8.8.8.8: &lt;span class=&quot;nv&quot;&gt;icmp_seq&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;2 &lt;span class=&quot;nv&quot;&gt;ttl&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;57 &lt;span class=&quot;nb&quot;&gt;time&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;160 ms
64 bytes from 8.8.8.8: &lt;span class=&quot;nv&quot;&gt;icmp_seq&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;3 &lt;span class=&quot;nv&quot;&gt;ttl&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;57 &lt;span class=&quot;nb&quot;&gt;time&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;66.8 ms
64 bytes from 8.8.8.8: &lt;span class=&quot;nv&quot;&gt;icmp_seq&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;4 &lt;span class=&quot;nv&quot;&gt;ttl&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;57 &lt;span class=&quot;nb&quot;&gt;time&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;131 ms
64 bytes from 8.8.8.8: &lt;span class=&quot;nv&quot;&gt;icmp_seq&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;5 &lt;span class=&quot;nv&quot;&gt;ttl&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;57 &lt;span class=&quot;nb&quot;&gt;time&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;318 ms
64 bytes from 8.8.8.8: &lt;span class=&quot;nv&quot;&gt;icmp_seq&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;6 &lt;span class=&quot;nv&quot;&gt;ttl&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;57 &lt;span class=&quot;nb&quot;&gt;time&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;198 ms
^C
--- 8.8.8.8 ping statistics ---
6 packets transmitted, 6 received, 0% packet loss, &lt;span class=&quot;nb&quot;&gt;time &lt;/span&gt;5849ms
rtt min/avg/max/mdev &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; 66.814/167.198/318.361/78.230 ms&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

</content>
 </entry>
 

</feed>
